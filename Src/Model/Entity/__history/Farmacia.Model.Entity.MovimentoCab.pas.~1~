unit Farmacia.MovimentoCab.Model;

interface

uses
  System.SysUtils,
  Data.DB,
  Datasnap.DBClient,
  FireDAC.Comp.Client,
  FireDAC.Stan.Param,
  Farmacia.Funcoes.Util,
  Farmacia.Types.Util,
  Farmacia.ConnectFuncoes.Util,
  Farmacia.LoadClientDataSet.Util;

type
  iMovimentoCab = interface
    Ctrl+Shift+G
    function CodMovimento(pValue:Integer):iMovimentoCab;
    function CodPaciente(pValue:Integer):iMovimentoCab;
    function NomPaciente(pValue:String):iMovimentoCab;
    function DocPaciente(pValue:String):iMovimentoCab;
    function TelPaciente(pValue:String):iMovimentoCab;
    function VlrSubtotal(pValue:Double):iMovimentoCab;
    function VlrDesconto(pValue:Double):iMovimentoCab;
    function VlrAcrescimo(pValue:Double):iMovimentoCab;
    function VlrFrete(pValue:Double):iMovimentoCab;
    function VlrTotal(pValue:Double):iMovimentoCab;
    function ObsMovimento(pValue:String):iMovimentoCab;
    function QtdServicos(pValue:Double):iMovimentoCab;
    function CodUsuarioAlt(pValue:Integer):iMovimentoCab;
    function DatCadastro(pValue:TDateTime):iMovimentoCab;
    function DatAlteracao(pValue:TDateTime):iMovimentoCab;

    function GetCodMovimento:Integer;
    function GetCodPaciente:Integer;
    function GetNomPaciente:String;
    function GetDocPaciente:String;
    function GetTelPaciente:String;
    function GetVlrSubtotal:Double;
    function GetVlrDesconto:Double;
    function GetVlrAcrescimo:Double;
    function GetVlrFrete:Double;
    function GetVlrTotal:Double;
    function GetObsMovimento:String;
    function GetQtdServicos:Double;
    function GetCodUsuarioAlt:Integer;
    function GetDatCadastro:TDateTime;
    function GetDatAlteracao:TDateTime;
    function Clear:MovimentoCab;
  end;

  TMovimentoCab = class(TInterfacedObject, iMovimentoCab)
  private
    FCodMovimento:Integer;
    FCodPaciente:Integer;
    FNomPaciente:String;
    FDocPaciente:String;
    FTelPaciente:String;
    FVlrSubtotal:Double;
    FVlrDesconto:Double;
    FVlrAcrescimo:Double;
    FVlrFrete:Double;
    FVlrTotal:Double;
    FObsMovimento:String;
    FQtdServicos:Double;
    FCodUsuarioAlt:Integer;
    FDatCadastro:TDateTime;
    FDatAlteracao:TDateTime;
  public
    function CodMovimento(pValue:Integer):iMovimentoCab;
    function CodPaciente(pValue:Integer):iMovimentoCab;
    function NomPaciente(pValue:String):iMovimentoCab;
    function DocPaciente(pValue:String):iMovimentoCab;
    function TelPaciente(pValue:String):iMovimentoCab;
    function VlrSubtotal(pValue:Double):iMovimentoCab;
    function VlrDesconto(pValue:Double):iMovimentoCab;
    function VlrAcrescimo(pValue:Double):iMovimentoCab;
    function VlrFrete(pValue:Double):iMovimentoCab;
    function VlrTotal(pValue:Double):iMovimentoCab;
    function ObsMovimento(pValue:String):iMovimentoCab;
    function QtdServicos(pValue:Double):iMovimentoCab;
    function CodUsuarioAlt(pValue:Integer):iMovimentoCab;
    function DatCadastro(pValue:TDateTime):iMovimentoCab;
    function DatAlteracao(pValue:TDateTime):iMovimentoCab;

    function GetCodMovimento:Integer;
    function GetCodPaciente:Integer;
    function GetNomPaciente:String;
    function GetDocPaciente:String;
    function GetTelPaciente:String;
    function GetVlrSubtotal:Double;
    function GetVlrDesconto:Double;
    function GetVlrAcrescimo:Double;
    function GetVlrFrete:Double;
    function GetVlrTotal:Double;
    function GetObsMovimento:String;
    function GetQtdServicos:Double;
    function GetCodUsuarioAlt:Integer;
    function GetDatCadastro:TDateTime;
    function GetDatAlteracao:TDateTime;

    function Clear:iMovimentoCab;

    constructor Create;
    destructor Destroy; override;
    class function New : iMovimentoCab;
  end;

implementation

{ TMovimentoCab }

constructor TMovimentoCab.Create;
begin

end;

destructor TMovimentoCab.Destroy;
begin

  inherited;
end;

class function TMovimentoCab.New: iMovimentoCab;
begin
  Result := Self.Create;
end;

function TMovimentoCab.CodMovimento(pValue:Integer):iMovimentoCab;
begin
  Result := Self;
  FCodMovimento:= pValue;
end;

function TMovimentoCab.CodPaciente(pValue:Integer):iMovimentoCab;
begin
  Result := Self;
  FCodPaciente:= pValue;
end;

function TMovimentoCab.NomPaciente(pValue:String):iMovimentoCab;
begin
  Result := Self;
  FNomPaciente:= pValue;
end;

function TMovimentoCab.DocPaciente(pValue:String):iMovimentoCab;
begin
  Result := Self;
  FDocPaciente:= pValue;
end;

function TMovimentoCab.TelPaciente(pValue:String):iMovimentoCab;
begin
  Result := Self;
  FTelPaciente:= pValue;
end;

function TMovimentoCab.VlrSubtotal(pValue:Double):iMovimentoCab;
begin
  Result := Self;
  FVlrSubtotal:= pValue;
end;

function TMovimentoCab.VlrDesconto(pValue:Double):iMovimentoCab;
begin
  Result := Self;
  FVlrDesconto:= pValue;
end;

function TMovimentoCab.VlrAcrescimo(pValue:Double):iMovimentoCab;
begin
  Result := Self;
  FVlrAcrescimo:= pValue;
end;

function TMovimentoCab.VlrFrete(pValue:Double):iMovimentoCab;
begin
  Result := Self;
  FVlrFrete:= pValue;
end;

function TMovimentoCab.VlrTotal(pValue:Double):iMovimentoCab;
begin
  Result := Self;
  FVlrTotal:= pValue;
end;

function TMovimentoCab.ObsMovimento(pValue:String):iMovimentoCab;
begin
  Result := Self;
  FObsMovimento:= pValue;
end;

function TMovimentoCab.QtdServicos(pValue:Double):iMovimentoCab;
begin
  Result := Self;
  FQtdServicos:= pValue;
end;

function TMovimentoCab.CodUsuarioAlt(pValue:Integer):iMovimentoCab;
begin
  Result := Self;
  FCodUsuarioAlt:= pValue;
end;

function TMovimentoCab.DatCadastro(pValue:TDateTime):iMovimentoCab;
begin
  Result := Self;
  FDatCadastro:= pValue;
end;

function TMovimentoCab.DatAlteracao(pValue:TDateTime):iMovimentoCab;
begin
  Result := Self;
  FDatAlteracao:= pValue;
end;

function TMovimentoCab.GetCodMovimento:Integer;
begin
  Result := FCodMovimento;
end;

function TMovimentoCab.GetCodPaciente:Integer;
begin
  Result := FCodPaciente;
end;

function TMovimentoCab.GetNomPaciente:String;
begin
  Result := FNomPaciente;
end;

function TMovimentoCab.GetDocPaciente:String;
begin
  Result := FDocPaciente;
end;

function TMovimentoCab.GetTelPaciente:String;
begin
  Result := FTelPaciente;
end;

function TMovimentoCab.GetVlrSubtotal:Double;
begin
  Result := FVlrSubtotal;
end;

function TMovimentoCab.GetVlrDesconto:Double;
begin
  Result := FVlrDesconto;
end;

function TMovimentoCab.GetVlrAcrescimo:Double;
begin
  Result := FVlrAcrescimo;
end;

function TMovimentoCab.GetVlrFrete:Double;
begin
  Result := FVlrFrete;
end;

function TMovimentoCab.GetVlrTotal:Double;
begin
  Result := FVlrTotal;
end;

function TMovimentoCab.GetObsMovimento:String;
begin
  Result := FObsMovimento;
end;

function TMovimentoCab.GetQtdServicos:Double;
begin
  Result := FQtdServicos;
end;

function TMovimentoCab.GetCodUsuarioAlt:Integer;
begin
  Result := FCodUsuarioAlt;
end;

function TMovimentoCab.GetDatCadastro:TDateTime;
begin
  Result := FDatCadastro;
end;

function TMovimentoCab.GetDatAlteracao:TDateTime;
begin
  Result := FDatAlteracao;
end;

function TMovimentoCab.Clear:iMovimentoCab;
begin
  Result := Self;
  FCodMovimento := 0;
  FCodPaciente := 0;
  FNomPaciente := EmptyStr;
  FDocPaciente := EmptyStr;
  FTelPaciente := EmptyStr;
  FVlrSubtotal := EmptyStr;
  FVlrDesconto := EmptyStr;
  FVlrAcrescimo := EmptyStr;
  FVlrFrete := EmptyStr;
  FVlrTotal := EmptyStr;
  FObsMovimento := EmptyStr;
  FQtdServicos := EmptyStr;
  FCodUsuarioAlt := 0;
  FDatCadastro := 0;
  FDatAlteracao := 0;
end;

end.
